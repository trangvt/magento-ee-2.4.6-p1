<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontCustomerCheckoutWithEnabledAddressSearchNegotiableQuoteTest">
        <annotations>
            <features value="Negotiable Quote checkout with search address enabled"/>
            <stories value="MC-5681: Implement handling of large number of addresses on Onepage Checkout"/>
            <title value="One Page Checkout with physical product and enabled customer Address Search - Negotiable Quote"/>
            <description value="One Page Checkout with physical product and enabled customer Address Search - Negotiable Quote"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-28451"/>
            <group value="checkout"/>
        </annotations>
        <before>
            <!--Enable B2B Config Setting -->
            <magentoCLI command="config:set {{EnableCompanyConfigData.path}} {{EnableCompanyConfigData.value}}" stepKey="enableCompany"/>
            <magentoCLI command="config:set {{EnableSharedCatalogConfigData.path}} {{EnableSharedCatalogConfigData.value}}" stepKey="enableSharedCatalog"/>
            <magentoCLI command="config:set {{EnableB2BQuoteConfigData.path}} {{EnableB2BQuoteConfigData.value}}" stepKey="enableNegotiableQuote"/>
            <magentoCLI command="config:set {{EnableQuickOrderConfigData.path}} {{EnableQuickOrderConfigData.value}}" stepKey="enableQuickOrder"/>
            <magentoCLI command="config:set {{EnableRequisitionListConfigData.path}} {{EnableRequisitionListConfigData.value}}" stepKey="enableRequisitionList"/>
            <magentoCLI command="config:set {{EnableCustomerAddressSearch.path}} {{EnableCustomerAddressSearch.value}}" stepKey="enableCustomerAddressSearch"/>
            <magentoCLI command="config:set {{AddressSearchLimitTwo.path}} {{AddressSearchLimitZero.value}}" stepKey="setAddressSearchLimitTwo"/>
            <!-- Create Simple Product and Assign product to default shared catalog -->
            <createData entity="SimpleProduct2" stepKey="createSimpleProduct">
                <field key="price">10.00</field>
            </createData>
            <createData entity="AssignProductToDefaultSharedCatalog" stepKey="assignProductToSharedCatalog">
                <requiredEntity createDataKey="createSimpleProduct"/>
            </createData>
            <!-- Create company admin -->
            <createData entity="Simple_US_Customer_CA_NY_Addresses" stepKey="createCompanyAdmin"/>
            <createData entity="Default_Company" stepKey="createDefaultCompany">
                <requiredEntity createDataKey="createCompanyAdmin"/>
            </createData>
        </before>
        <after>
            <!--Logout customer-->
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="customerLogout"/>
            <!--Enable Default B2B Config -->
            <magentoCLI command="config:set {{DisableCompanyConfigData.path}} {{DisableCompanyConfigData.value}}" stepKey="disableCompany"/>
            <magentoCLI command="config:set {{DisableSharedCatalogConfigData.path}} {{DisableSharedCatalogConfigData.value}}" stepKey="disableSharedCatalog"/>
            <magentoCLI command="config:set {{DisableB2BQuoteConfigData.path}} {{DisableB2BQuoteConfigData.value}}" stepKey="disableNegotiableQuote"/>
            <magentoCLI command="config:set {{DisableQuickOrderConfigData.path}} {{DisableQuickOrderConfigData.value}}" stepKey="disableQuickOrder"/>
            <magentoCLI command="config:set {{DisableRequisitionListConfigData.path}} {{DisableRequisitionListConfigData.value}}" stepKey="disableRequisitionList"/>
            <magentoCLI command="config:set {{DisableCustomerAddressSearch.path}} {{DisableCustomerAddressSearch.value}}" stepKey="disableCustomerAddressSearch"/>
            <magentoCLI command="config:set {{DefaultAddressSearchLimit.path}} {{DefaultAddressSearchLimit.value}}" stepKey="setAddressSearchLimitTen"/>
            <!-- Delete Simple Product -->
            <deleteData createDataKey="createSimpleProduct" stepKey="deleteProduct"/>
            <!-- Delete Company and Company admin -->
            <deleteData createDataKey="createDefaultCompany" stepKey="deleteCompany"/>
            <deleteData createDataKey="createCompanyAdmin" stepKey="deleteCompanyAdmin"/>
            <!--Clear filter negotiable quotes grid-->
            <amOnPage url="{{AdminNegotiableQuotesPage.url}}" stepKey="navigateToNegotiableQuotesGridPage"/>
            <actionGroup ref="ClearFiltersAdminDataGridActionGroup" stepKey="clearFiltersNegotiableQuotesGrid"/>
            <!-- Logout Admin -->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutFromAdmin"/>
        </after>
        <!-- 1. Login to storefront with Company account and add Simple1 product to shopping cart -->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStoreFront">
            <argument name="Customer" value="$createCompanyAdmin$"/>
        </actionGroup>
        <actionGroup ref="AddSimpleProductToCartActionGroup" stepKey="addProductToCart">
            <argument name="product" value="$createSimpleProduct$"/>
        </actionGroup>
        <!-- 2. Open shopping cart and click Request a Quote button -->
        <!-- 3. Fill out "Add your comment", "Quote name" fields and click "Send Request" button -->
        <actionGroup ref="ClickViewAndEditCartFromMiniCartActionGroup" stepKey="goToShoppingCartFromMinicart"/>
        <actionGroup ref="StorefrontRequestQuoteActionGroup" stepKey="requestQuote">
            <argument name="quote" value="NeqotiableQuote"/>
        </actionGroup>
        <seeElement selector="{{StorefrontMyQuoteGridSection.quoteRowByName(NeqotiableQuote.name)}}" stepKey="seeQuotePresentGrid"/>
        <!-- 4. Open created quote and click "Select Existing Address" link in "Shipping Information" block , select address "A" and click "Save" button -->
        <click selector="{{StorefrontMyQuoteGridSection.viewQuoteByName(NeqotiableQuote.name)}}" stepKey="clickViewButton"/>
        <actionGroup ref="StorefrontNegotiableQuoteSelectCustomerAddressAsShippingAddressActionGroup" stepKey="selectCustomerAddressAsShippingAddress"/>
        <!-- 5. Click "Send for Review" button -->
        <actionGroup ref="StorefrontNegotiableQuoteSendForReviewActionGroup" stepKey="sendQuoteForReview"/>
        <!-- 6. Go to admin > Sales > Quotes and open created quote -->
        <actionGroup ref="AdminLoginActionGroup" stepKey="LoginAsAdmin"/>
        <actionGroup ref="AdminOpenNegotiableQuoteActionGroup" stepKey="searchAndOpenQuoteInAdmin">
            <argument name="quoteName" value="{{NeqotiableQuote.name}}"/>
        </actionGroup>
        <!-- 7. In block "Shipping Methods & Price" select "Flat Rate" shipping method and click "Send" button -->
        <actionGroup ref="AdminNegotiableQuoteSelectShippingMethodActionGroup" stepKey="chooseFlatRateShippingMethod"/>
        <!-- Send Quote -->
        <actionGroup ref="AdminSendNegotiableQuoteActionGroup" stepKey="clickSendQuote"/>
        <!-- 8. Go to storefront > My Quotes and open the quote -->
        <actionGroup ref="StorefrontOpenNegotiableQuoteActionGroup" stepKey="openNegotiableQuote">
            <argument name="quoteName" value="{{NeqotiableQuote.name}}"/>
        </actionGroup>
        <!-- 9. Click "Proceed to Checkout" button -->
        <click selector="{{StorefrontNegotiableQuoteViewSection.proceedToCheckout}}" stepKey="clickProceedToCheckoutButton"/>
        <seeInCurrentUrl url="#shipping" stepKey="shipmentStepIsOpened"/>
        <!-- Verify shipping address A data -->
        <actionGroup ref="CheckSelectedShippingAddressInCheckoutWithSearchActionGroup" stepKey="checkDefaultShippingAddressSelected">
            <argument name="customerVar" value="$createCompanyAdmin$"/>
            <argument name="customerAddressVar" value="US_Address_CA"/>
        </actionGroup>
        <dontSee selector="{{CheckoutShippingAddressSection.changeAddressInPopupButton}}" stepKey="dontSeeChangeAddressLink"/>
        <see selector="{{CheckoutShippingSection.quoteAddressLockedMessage}}" userInput="{{NegotiableQuoteMessages.shippingAddressLockedMessage}}" stepKey="quoteAddressIsLockedMessageIsDisplayed"/>
        <!-- 10. Click "Next" button -->
        <actionGroup ref="StorefrontCheckoutForwardFromShippingStepActionGroup" stepKey="proceedToBillingStep"/>
        <!-- Select Check / Money order Payment method -->
        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="selectCheckMoneyPayment"/>
        <seeInCurrentUrl url="#payment" stepKey="paymentStepIsOpened"/>
        <!--  Address "A" is displayed as billing address for selected payment method -->
        <actionGroup ref="CheckBillingAddressInCheckoutActionGroup" stepKey="checkFirstBillingAddressOnBillingPage">
            <argument name="customerVar" value="$createCompanyAdmin$"/>
            <argument name="customerAddressVar" value="US_Address_CA"/>
        </actionGroup>
        <!-- 11. Click on Change Address link -->
        <actionGroup ref="StorefrontOpenCustomerAddressesOnPaymentStepInCheckoutActionGroup" stepKey="clickChangeAddresslink"/>
        <see selector="{{CheckoutBillingAddressSearchSection.addressesFound}}" userInput="2 addresses" stepKey="see2Address"/>
        <!-- Default address with labels DEFAULT and Selected -->
        <seeElement selector="{{CheckoutBillingAddressSearchSection.defaultAddressButton(US_Address_CA.postcode)}}" stepKey="verifyDefaultAddressSelected"/>
        <seeElement selector="{{CheckoutBillingAddressSearchSection.selectedAddressButton(US_Address_CA.postcode)}}" stepKey="verifyDefaultAddressSelectedLabel"/>
        <!-- Second address with button "Select" -->
        <seeElement selector="{{CheckoutBillingAddressSearchSection.selectButton(US_Address_NY_Not_Default_Address.postcode)}}" stepKey="verifySelectButtonForSecondAddress"/>
        <!-- 12. Type "10011" in Search field and press Enter -->
        <actionGroup ref="StorefrontSearchAddressInSelectBillingAddressPopupOnPaymentStepOnCheckoutActionGroup" stepKey="searchAddress"/>
        <!-- The only second address is displayed in the grid -->
        <dontSeeElement selector="{{CheckoutBillingAddressSearchSection.exactBillingAddressItem('2')}}" stepKey="assertOnlyOneAddressDisplayed"/>
        <seeElement selector="{{CheckoutBillingAddressSearchSection.selectButton(US_Address_NY_Not_Default_Address.postcode)}}" stepKey="verifySelectButtonForNewYorkAddress"/>
        <!-- 13. Click "Select" button -->
        <click selector="{{CheckoutBillingAddressSearchSection.selectButton(US_Address_NY_Not_Default_Address.postcode)}}" stepKey="clickSelectForFoundAddress"/>
        <!-- Select Billing Address  popup is closed-->
        <waitForElementNotVisible selector="{{CheckoutShippingAddressSearchSection.popupSelectShippingAddress}}" stepKey="verifyPopupClosed"/>
        <!-- Billing Address block is updated to second address -->
        <actionGroup ref="CheckBillingAddressInCheckoutWithBillingAddressOnPaymentPageActionGroup" stepKey="checkUpdatedBillingAddressOnBillingPageWithBillingAddressOnPaymentPage">
            <argument name="customerVar" value="$createCompanyAdmin$"/>
            <argument name="customerAddressVar" value="US_Address_NY_Not_Default_Address"/>
        </actionGroup>
        <!-- Check that checkbox Billing and Shipping Address Are The Same is unchecked -->
        <dontSeeCheckboxIsChecked selector="{{CheckoutBillingAddressSection.billingAndShippingAddressAreTheSame}}" stepKey="checkBillingAndShippingAddressAreTheSameCheckboxIsUnchecked"/>
        <!-- 14. Click "Place Order" button -->
        <actionGroup ref="ClickPlaceOrderActionGroup" stepKey="placeOrder"/>

        <!-- 15. Go to storefront > My Quotes and open the quote again -->
        <actionGroup ref="StorefrontOpenNegotiableQuoteActionGroup" stepKey="openNegotiableQuote1">
            <argument name="quoteName" value="{{NeqotiableQuote.name}}"/>
        </actionGroup>

        <!-- 16. Verify you see View Order Hyperlink -->
        <seeElement selector="{{StorefrontNegotiableQuoteViewSection.viewOrderHyperLinkInQuotes}}" stepKey="verifyViewOrderHyperLink"/>
    </test>
</tests>
