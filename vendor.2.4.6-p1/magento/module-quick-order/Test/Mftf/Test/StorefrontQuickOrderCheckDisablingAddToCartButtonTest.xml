<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontQuickOrderCheckDisablingAddToCartButtonTest">
        <annotations>
            <features value="Quick Order"/>
            <stories value="Create Quick Order"/>
            <title value="Storefront quick order check disabling Add to cart button"/>
            <description value="Storefront quick order check disabling Add to cart button"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-28732"/>
            <useCaseId value="MC-35327"/>
            <group value="quickOrder"/>
        </annotations>
        <before>
            <!-- Enable Quick order functionality -->
            <createData entity="B2BEnabledQuickOrderConfig" stepKey="enabledQuickOrderConfig"/>
            <!-- Create a product -->
            <createData entity="SimpleProduct2" stepKey="createProduct"/>
        </before>
        <after>
            <!--Set b2b config to default-->
            <createData entity="B2BDefaultConfig" stepKey="defaultB2BConfig"/>
            <!--Delete created data-->
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
        </after>

        <!--Go to Quick order and check add to cart button is disabled-->
        <amOnPage url="{{StorefrontQuickOrderPage.url}}" stepKey="goQuickOrderPage"/>
        <waitForElementVisible selector="{{StorefrontQuickOrderSection.addToCartDisabled}}" stepKey="waitAddToCartDisabled"/>

        <!--Enter the existing product sku-->
        <fillField selector="{{StorefrontQuickOrderSection.enterSkuOrProductName}}" userInput="$createProduct.sku$" stepKey="fillProductSku"/>
        <click selector="{{StorefrontQuickOrderSection.Qty}}" stepKey="clickQty"/>
        <waitForElementVisible selector="{{StorefrontQuickOrderSection.addToCart}}" stepKey="waitAddToCart"/>
        <!--Check that QTY is 1-->
        <seeInField selector="{{StorefrontQuickOrderSection.Qty}}" userInput="1" stepKey="assertProductQty"/>
        <!--Check product name-->
        <see selector="{{StorefrontQuickOrderSection.productName}}" userInput="$createProduct.name$" stepKey="assertProductSku"/>
        <waitForElementVisible selector="{{StorefrontQuickOrderSection.addToCart}}" stepKey="waitAddToCartEnabled"/>
        <!--Enter the invalid product sku-->
        <fillField selector="{{StorefrontQuickOrderSection.enterSkuOrProductNameLast}}" userInput="invalidSku" stepKey="fillInvalidProductSku"/>
        <click selector="{{StorefrontQuickOrderSection.Qty}}" stepKey="clickQtyForInvalid"/>
        <waitForElementVisible selector="{{StorefrontQuickOrderSection.addToCartDisabled}}" stepKey="waitAddToCartDisabledAfterAddingInvalid"/>
        <!--Remove invalid product-->
        <click selector="{{StorefrontQuickOrderSection.removeRow('2')}}" stepKey="removeInvalidProduct"/>
        <!-- wait Add to Cart visible -->
        <waitForElementVisible selector="{{StorefrontQuickOrderSection.addToCart}}" stepKey="waitAddToCartEnabledAfterDeletingInvalidProduct"/>
        <!--Remove existing product-->
        <click selector="{{StorefrontQuickOrderSection.remove}}" stepKey="removeProduct"/>
        <waitForElementVisible selector="{{StorefrontQuickOrderSection.addToCartDisabled}}" stepKey="waitAddToCartDisabledAfterDeletingProduct"/>
    </test>
</tests>
